<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on OOMORI.LUNCH</title>
    <link>https://renoinn.github.io/posts/</link>
    <description>Recent content in Posts on OOMORI.LUNCH</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 03 May 2018 12:48:44 +0900</lastBuildDate>
    
	<atom:link href="https://renoinn.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>create-react-appからTypescript&#43;Reactで動かすまで</title>
      <link>https://renoinn.github.io/posts/react-typescript-1/</link>
      <pubDate>Thu, 03 May 2018 12:48:44 +0900</pubDate>
      
      <guid>https://renoinn.github.io/posts/react-typescript-1/</guid>
      <description>$ create-react-app my-app $ npm run eject $ npm install -g webpack $ npm install --save @types/react @types/react-dom $ npm install --save-dev typescript ts-loader source-map-loader $ vim tsconfig.json  tsconfig.jsonを作る。内容は下記。
{ &amp;quot;compilerOptions&amp;quot;: { &amp;quot;outDir&amp;quot;: &amp;quot;./dist/&amp;quot;, &amp;quot;sourceMap&amp;quot;: true, &amp;quot;noImplicitAny&amp;quot;: true, &amp;quot;module&amp;quot;: &amp;quot;commonjs&amp;quot;, &amp;quot;target&amp;quot;: &amp;quot;es5&amp;quot;, &amp;quot;jsx&amp;quot;: &amp;quot;react&amp;quot; }, &amp;quot;include&amp;quot;: [ &amp;quot;./src/**/*&amp;quot; ] }  config/paths.jsのappIndexJsのパスをindex.tsxのパスに変更する。
// config after eject: we&#39;re in ./config/ module.exports = { dotenv: resolveApp(&#39;.env&#39;), appBuild: resolveApp(&#39;build&#39;), appPublic: resolveApp(&#39;public&#39;), appHtml: resolveApp(&#39;public/index.</description>
    </item>
    
    <item>
      <title>nodebrewでnodejsをアップデートする</title>
      <link>https://renoinn.github.io/posts/node-update-brew/</link>
      <pubDate>Tue, 01 May 2018 17:32:27 +0900</pubDate>
      
      <guid>https://renoinn.github.io/posts/node-update-brew/</guid>
      <description>気付いたら最新版と自分の環境がかなり離れてしまったので、nodebrewで開発環境をアップデートする。
$ nodebrew install stable $ nodebrew use stable $ node -v v10.0.0  ついでに、npmもアップデートする。
$ npm install -g npm $ npm version { npm: &#39;6.0.0&#39;, ares: &#39;1.14.0&#39;, cldr: &#39;33.0&#39;, http_parser: &#39;2.8.0&#39;, icu: &#39;61.1&#39;, modules: &#39;64&#39;, napi: &#39;3&#39;, nghttp2: &#39;1.29.0&#39;, node: &#39;10.0.0&#39;, openssl: &#39;1.1.0h&#39;, tz: &#39;2018c&#39;, unicode: &#39;10.0&#39;, uv: &#39;1.20.2&#39;, v8: &#39;6.6.346.24-node.5&#39;, zlib: &#39;1.2.11&#39; }  </description>
    </item>
    
    <item>
      <title>コーチングセッション 第一回目</title>
      <link>https://renoinn.github.io/posts/coaching-1/</link>
      <pubDate>Tue, 01 May 2018 15:51:41 +0900</pubDate>
      
      <guid>https://renoinn.github.io/posts/coaching-1/</guid>
      <description>先日、会社でコーチングについてのセッションを受けた。今回は第一回目で、今後も続いていくらしいので、忘れないように覚書き。
そもそもコーチングとは？ コーチングとは、相手が望むゴールに向かって導いてあげることである。
人に何かを教えたり助ける行為にはいくつか種類がある。
 teaching coaching traning counseling consulting facilitator  それぞれ目的や主体、コミュニケーションの方法が違う。コーチングでは、本人の中にある未来像を明確にしてあげて、そこまで導いてあげることになる。
区別を明確にして使い分ける 上記の6つの指導法は一度の指導の中で無意識に複数使っている場合がある。 これらを自分の中で明確に区別して使い分けることで、それぞれのパフォーマンスを上げられる（かもしれない）
承認する コーチングでは主に質問をして相手の未来像を引き出すことになるが、この時承認を意識することで傾聴力を高めて、相手のコミットメントを向上させられる。
承認には3種類ある。
 存在承認 変化・成長承認 成果承認  まずはとにかく意識して承認してみる。この時、&amp;rdquo;評価&amp;rdquo;が入ると承認ではなくなってしまう。「ある状態を受け止める」ところで止めて、それがどうであるか（すごいとか良くないとか）はグッと堪える。
承認することで自他がどう変わるかを考える。また、どのような承認をするとより効果的か考える。</description>
    </item>
    
    <item>
      <title>ブログ立ててみた</title>
      <link>https://renoinn.github.io/posts/blog-start/</link>
      <pubDate>Mon, 08 Jan 2018 14:29:51 +0900</pubDate>
      
      <guid>https://renoinn.github.io/posts/blog-start/</guid>
      <description>hugoを使ってgithub pagesでブログを立ててみた。技術的な事とか思った事を書いてく予定。</description>
    </item>
    
    <item>
      <title>Test</title>
      <link>https://renoinn.github.io/posts/test/</link>
      <pubDate>Mon, 08 Jan 2018 13:58:57 +0900</pubDate>
      
      <guid>https://renoinn.github.io/posts/test/</guid>
      <description>test post.</description>
    </item>
    
  </channel>
</rss>